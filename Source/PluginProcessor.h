/*
  ==============================================================================

    This file was auto-generated by the Introjucer!

    It contains the basic framework code for a JUCE plugin processor.

  ==============================================================================
*/

#ifndef PLUGINPROCESSOR_H_INCLUDED
#define PLUGINPROCESSOR_H_INCLUDED

#include "../JuceLibraryCode/JuceHeader.h"
#include "Grain.h"
#include <vector>
#include <chrono>


//==============================================================================
/**
*/
class Grnlr_kleinAudioProcessor  : public AudioProcessor
{
public:
    //==============================================================================
    Grnlr_kleinAudioProcessor();
    ~Grnlr_kleinAudioProcessor();

    //==============================================================================
    void prepareToPlay (double sampleRate, int samplesPerBlock) override;
    void releaseResources() override;

    void applyEnvelope (AudioSampleBuffer&);
    void processBlock (AudioSampleBuffer&, MidiBuffer&) override;
    
    //==============================================================================    
    void updateValues();
    void scheduleGrain(int startPosition, int length, int time);
    double checkTime();
    
    //==============================================================================
    AudioProcessorEditor* createEditor() override;
    bool hasEditor() const override;

    //==============================================================================
    const String getName() const override;

    bool acceptsMidi() const override;
    bool producesMidi() const override;
    bool silenceInProducesSilenceOut() const override;
    double getTailLengthSeconds() const override;

    //==============================================================================
    int getNumPrograms() override;
    int getCurrentProgram() override;
    void setCurrentProgram (int index) override;
    const String getProgramName (int index) override;
    void changeProgramName (int index, const String& newName) override;

    //==============================================================================
    void getStateInformation (MemoryBlock& destData) override;
    void setStateInformation (const void* data, int sizeInBytes) override;

    //==============================================================================
    AudioSampleBuffer fileBuffer;
    Grain grain;
    GrainStack waitingStack;
    GrainStack playingStack;
    
    std::chrono::steady_clock::time_point startTime;
    std::chrono::duration<double> time;
    
    int position;

    float lengthRatio;
    float positionOffset;

    int lengthInSamples;
    int positionOffsetInSamples;

private:
    Random random;
    //void process (AudioBuffer<float>& buffer, MidiBuffer& midiMessages, AudioBuffer<float>& delayBuffer);

    //==============================================================================
    JUCE_DECLARE_NON_COPYABLE_WITH_LEAK_DETECTOR (Grnlr_kleinAudioProcessor)
};


#endif  // PLUGINPROCESSOR_H_INCLUDED
